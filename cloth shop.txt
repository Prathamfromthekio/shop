import tkinter as tk
from tkinter import messagebox

class ClothShopManagementSystem:
    def _init_(self, root):
        self.root = root
        self.root.title("Cloth Shop Management System")

        # Variables
        self.inventory = {
            "T-shirt": 50,
            "Jeans": 30,
            "Jacket": 20,
            # Add more items as needed
        }

        self.selected_item = tk.StringVar()
        self.quantity_entry = tk.Entry(root)
        self.total_label = tk.Label(root, text="Total: $0.00")

        # GUI setup
        self.setup_gui()

    def setup_gui(self):
        # Item selection dropdown
        item_label = tk.Label(self.root, text="Select Item:")
        item_label.grid(row=0, column=0, padx=10, pady=10)

        item_options = list(self.inventory.keys())
        item_dropdown = tk.OptionMenu(self.root, self.selected_item, *item_options)
        item_dropdown.grid(row=0, column=1, padx=10, pady=10)

        # Quantity entry
        quantity_label = tk.Label(self.root, text="Quantity:")
        quantity_label.grid(row=1, column=0, padx=10, pady=10)

        self.quantity_entry.grid(row=1, column=1, padx=10, pady=10)

        # Add to cart button
        add_to_cart_button = tk.Button(self.root, text="Add to Cart", command=self.add_to_cart)
        add_to_cart_button.grid(row=2, column=0, columnspan=2, pady=10)

        # Total label
        self.total_label.grid(row=3, column=0, columnspan=2, pady=10)

    def add_to_cart(self):
        selected_item = self.selected_item.get()
        quantity = self.get_quantity()

        if selected_item and quantity:
            if selected_item in self.inventory and quantity <= self.inventory[selected_item]:
                total_price = quantity * self.get_item_price(selected_item)
                self.update_inventory(selected_item, quantity)
                self.update_total_label(total_price)
                messagebox.showinfo("Success", f"Added {quantity} {selected_item}(s) to the cart.")
            else:
                messagebox.showwarning("Warning", "Invalid quantity or item not in stock.")
        else:
            messagebox.showwarning("Warning", "Please select an item and enter a valid quantity.")

    def get_quantity(self):
        try:
            quantity = int(self.quantity_entry.get())
            return quantity if quantity > 0 else 0
        except ValueError:
            return 0

    def get_item_price(self, item):
        # Add item prices as needed
        prices = {
            "T-shirt": 10.0,
            "Jeans": 20.0,
            "Jacket": 30.0,
            # Add more items and prices as needed
        }
        return prices.get(item, 0.0)

    def update_inventory(self, item, quantity):
        if item in self.inventory:
            self.inventory[item] -= quantity

    def update_total_label(self, total_price):
        current_total = self.total_label.cget("text")
        current_total = float(current_total.split("$")[1])
        new_total = current_total + total_price
        self.total_label.config(text=f"Total: ${new_total:.2f}")


if _name_ == "_main_":
    root = tk.Tk()
    app = ClothShopManagementSystem(root)
    root.mainloop()